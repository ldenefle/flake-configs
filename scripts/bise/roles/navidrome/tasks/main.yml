---
- name: Install prereq packages
  ansible.builtin.apt:
    name: "{{ navidrome_package_requirements }}"
    state: present
    update_cache: yes  # yamllint disable-line rule:truthy
    force_apt_get: yes  # yamllint disable-line rule:truthy
  when: navidrome_package_requirements is defined

- name: Ensure directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ navidrome_user }}"
    group: "{{ navidrome_group }}"
    state: directory
    mode: '0755'
  with_items:
    - "{{ navidrome_install_location }}"
    - "{{ navidrome_config_dir }}"

- name: Construct asset URL
  ansible.builtin.set_fact:
    navidrome_asset_url: "{{ navidrome_release_url }}/download/v{{ navidrome_version }}/navidrome_{{ navidrome_version }}_{{ ansible_system }}_armv7.tar.gz"

- name: Download latest release
  ansible.builtin.get_url:
    url: "{{ navidrome_asset_url }}"
    dest: "{{ navidrome_temp_location }}/navidrome_{{ navidrome_version }}_{{ ansible_system }}_armv7.tar.gz"
    mode: '0400'

- name: Extract latest release
  ansible.builtin.unarchive:
    src: "{{ navidrome_temp_location }}/navidrome_{{ navidrome_version }}_{{ ansible_system }}_armv7.tar.gz"
    dest: "{{ navidrome_install_location }}"
    remote_src: yes
    owner: "{{ navidrome_user }}"
    group: "{{ navidrome_group }}"
    mode: '0755'
    creates: "{{ navidrome_install_location }}/navidrome"
  notify:
    - Restart_navidrome

- name: Configure navidrome.toml
  ansible.builtin.template:
    src: var/lib/navidrome/navidrome.toml.j2
    dest: "{{ navidrome_config_dir }}/{{ navidrome_config_file }}"
    owner: "{{ navidrome_user }}"
    group: "{{ navidrome_group }}"
    mode: '0644'
  notify:
    - Restart_navidrome

- name: Configure navidrome systemd service
  ansible.builtin.template:
    src: etc/systemd/system/navidrome.service.j2
    dest: /etc/systemd/system/navidrome.service
    owner: "{{ navidrome_user }}"
    group: "{{ navidrome_group }}"
    mode: '0644'
  notify:
    - Enable_navidrome
    - Reload_systemd
